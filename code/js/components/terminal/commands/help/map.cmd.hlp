<banana>manage a maps storage for conjugation of groups</banana>
<white>Type param /k to return all available keywords</white>

<lightblue>usage</lightblue> <snow>map %class% %action% %service% %tag% %mobius-map-params%</snow>

<lightblue>action</lightblue> <snow>add | clean | delete | gen | list | modify</snow>
<lightblue>class</lightblue> <snow>mobiusmap | formula</snow>
<lightblue>service</lightblue> <snow>init</snow>
<lightblue>tag</lightblue> <snow>identifier for actions</snow>
<lightblue>params</lightblue> <snow>'a', 'b', 'c', 'd'</snow>

<lightblue>map release</lightblue>
<cadetblue>return the latest release date for this command</cadetblue>

<yellow>------------- EXAMPLES ----------------</yellow>
<lightblue>map list</lightblue>
<cadetblue>return the list of currently recorded maps</cadetblue>

<gray>Map inputs can be different</gray>

<lightblue>map add class:mobius a:1 b:2 c:3 d:4 tag:mymobius</lightblue>
<cadetblue>add a new element of class 'Mobius map' from parameters, tagged as 'mymobius'</cadetblue>

<lightblue>map add class:mobius (z-1)/(z+1) tag:anothermobius</lightblue>
<cadetblue>add a new element of class 'Mobius map' from formula, tagged as 'anothermobius'</cadetblue>

<lightblue>map add class:formula direct:z^3 inverse:z^(-3) tag:cubicmap</lightblue>
<cadetblue>add a new element of class 'Mobius map' and tag it 'cubic'</cadetblue>

<lightblue>map add class:mobius a:sin(0.23) b:2+i c:1/3 d:sqrt(2) tag:mymaptag</lightblue>
<cadetblue>formulas can be input through single, separately written params</cadetblue>

<lightblue>map add class:Mobius map:1,2,0,1 tag:mymaptag</lightblue>
<cadetblue>formulas can be input through a chain of params separated by comma (here map is 'z+2')</cadetblue>

<lightblue>map gen (z-1)/(z+1)</lightblue>
<cadetblue>add a new generator in the current group and tag it as 'A'</cadetblue>
<cadetblue>if the label is omitted, it will be automatically calculated and suggested</cadetblue>

<lightblue>map gen (z-1)/(z+1) (z-i)/(z+i) init</lightblue>
<cadetblue>multiple version of the previous example + automatic init of resulting gens</cadetblue>

<lightblue>map modify a:-sqrt(3) tag:mymaptag</lightblue>
<cadetblue>modify param 'a' for the map 'mymaptag'</cadetblue>
<cadetblue>Note: this action works for non-default entries exclusively</cadetblue>

<lightblue>map delete tag:mymaptag</lightblue>
<cadetblue>delete the map 'mymaptag' from current list</cadetblue>
<cadetblue>Note: this action works for non-default entries exclusively</cadetblue>

<lightblue>map tag:identity newtag:cubic</lightblue>
<cadetblue>get the element tagged as 'identity' and turn its tag to 'cubic'</cadetblue>

<yellow>------------- NOTES ----------------</yellow>
<yellow>Note (1)</yellow> <cadetblue>Use cmd '<lightblue>dg</lightblue>' for conjugation of groups.</cadetblue>
<yellow>Note (2)</yellow> <cadetblue>there is a bunch of default maps. User-defined entries are available during browser run-rime only.</cadetblue>
<yellow>Note (3)</yellow> <cadetblue>'tag' param must appear as the last one along the input sequence</cadetblue>
<yellow>Note (4)</yellow> <cadetblue>The gen action allows to declare groups from the cmd line</cadetblue>