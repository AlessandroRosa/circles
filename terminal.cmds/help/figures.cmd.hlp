<banana>figures management</banana>
<white>Type param /k to return all available keywords</white>
<white>Type param</white> <yellow>/h</yellow> <white>to watch help inside the terminal or</white> <yellow>/h html</yellow> <white>in a separate pop-up</white>

<lightblue>usage</lightblue> <snow>figures %action% %indexes% %all% %params% %opacity% %linethickness% %pos%</snow>

<lightblue>%action%</lightblue> <snow>connect | copy | delete | disable | enable | disconnect | hide | show | render | mergerect | filter | list | transfer | update</snow>
<lightblue>%pos%</lightblue> <snow>begin | end</snow>
<lightblue>%indexes%</lightblue> <snow>input index for the figures to be managed</snow>
<lightblue>%params%</lightblue> <snow>close | open | reverse | noinherit</snow> <orange>(optional)</orange>
<lightblue>%opacity%</lightblue> <snow>from 0.0 to 1.0</snow> <orange>(required if line thickness is input)</orange>
<lightblue>%linethickness%</lightblue> <snow>any positive integer</snow>

<lightblue>figures bomb</lightblue>
<cadetblue>delete all recorded figures</cadetblue>

<lightblue>figures connect @1 @2 @3 close</lightblue>
<cadetblue>connect line, points and close the resulting polyline.</cadetblue>
<cadetblue>render / fill properties of the first indexed entry are inherited by the connected figure</cadetblue>

<lightblue>figures connect @1 @2 @3 close noinherit</lightblue>
<cadetblue>same as above, except render / fill values are not inherited</cadetblue>

<lightblue>figures copy @1 @2</lightblue>
<cadetblue>duplicate figures 1 and 2 in the list</cadetblue>

<lightblue>figures delete all</lightblue>
<cadetblue>alias of 'figures bomb'</cadetblue>

<lightblue>figures delete @2 @4</lightblue>
<cadetblue>delete figures 2 and 4</cadetblue>

<lightblue>figures hide @1</lightblue>
<lightblue>figures disable @1</lightblue>
<cadetblue>disable figure indexed as 1 (disabled figures are not displayed)</cadetblue>

<lightblue>figures render</lightblue>
<cadetblue>render all recorded figures</cadetblue>

<lightblue>figures render @1 @3</lightblue>
<cadetblue>render only recorded figures with index 1 and 3</cadetblue>

<lightblue>figures disconnect @1 @2 @3</lightblue>
<cadetblue>if selected items are lines or rect, they are disconnected and re-registered as single points</cadetblue>

<lightblue>figures show @1</lightblue>
<lightblue>figures enable @1</lightblue>
<cadetblue>enable figure indexed as 1</cadetblue>

<lightblue>figures filter @1</lightblue>
<cadetblue>plot only that item indexed as 1</cadetblue>

<lightblue>figures mergerect @1 @2</lightblue>
<cadetblue>given items 1, 2 to be of rect type and having a side in common, they are merged into one rect</cadetblue>
<cadetblue>the index arguments list can be of arbitrary length</cadetblue>
<orange>merging rects will be removed from figures list</orange>

<lightblue>figures mergerect @1 @2</lightblue> <orange>keep</orange>
<orange>merging rects won't be removed from figures list</orange>

<lightblue>figures list</lightblue>
<cadetblue>return the list of recorded figures (short version)</cadetblue>
<orange>the list refers to the order followed to render the figures</orange>

<lightblue>figures list long</lightblue>
<cadetblue>return the list of recorded figures (long version)</cadetblue>

<lightblue>figures list reverse</lightblue>
<cadetblue>reverse the order of recorded figures in the list</cadetblue>

<lightblue>figures transfer wplane 1</lightblue>
<cadetblue>transfer figure indexed as 1 to W-plane</cadetblue>

<lightblue>figures rebuild</lightblue>
<cadetblue>rebuild the hash table in case of cmds failure</cadetblue>

<lightblue>figures sort @3 @1 @2</lightblue>
<cadetblue>sort figures according to input indexes: higher values refer to topmost figures</cadetblue>

<lightblue>figures swap @3 @1</lightblue>
<cadetblue>swap figures with indexes 3 and 1 inside the list</cadetblue>

<lightblue>figures update @1 center:(-1,-1)</lightblue>
<cadetblue>if figure 1 is a circle, center becomes (-1,-1)</cadetblue>

<lightblue>figures update @1 points (-1,-1) (2,-1) (3,3)</lightblue>
<cadetblue>if figure 1 is a (poly)line, the new points will be (-1,-1) (2,-1) (3,3)</cadetblue>

<lightblue>figures update @2 close | open </lightblue>
<cadetblue>if figure 2 is a (poly)line, it will be closed | opened</cadetblue>

<lightblue>figures update all drawcolor:red fillcolor:white</lightblue>
<cadetblue>set 'drawcolor' to red and 'fillcolor' to white for all recorded figures</cadetblue>

<yellow>------- SPECIAL OPERATIONS FOR POLYLINES -------</yellow>
<lightblue>figures polyadd @1 (2,1) (3,2) %pos%</lightblue>
<cadetblue>if figure 1 is a polyline, two nodes - with coords (2,1) and (3,2) - are added to it</cadetblue>

<lightblue>figures shift @1 (-1,1)</lightblue>
<cadetblue>if figure 1 is a polyline, all nodes are shifted by (-1,1)</cadetblue>

<lightblue>figures shift @1 #1 #2 #3 (-1,1)</lightblue>
<cadetblue>if figure 1 is a polyline, nodes 1,2,3 are shifted by (-1,1)</cadetblue>

<lightblue>figures polysort @1 #3 #1 #2</lightblue>
<cadetblue>if figure 1 is a polyline, nodes are sorted along the sequence 3 1 2</cadetblue>

<lightblue>figures polysort @1 #3 #1 #2</lightblue>
<cadetblue>if figure 1 is a polyline, nodes connection is sorted along the 3,1,2 sequence</cadetblue>
<orange>if the input nodes sequence does not cover the whole polyline, the remaining original sequence follows</orange>

<lightblue>figures polyupdate @1 #1 (0.5,-1)</lightblue>
<cadetblue>if figure 1 is a polyline, node 1 coords are updated with input value</cadetblue>

<lightblue>figures polyupdate @1 #1 (0.5,-1) #2 (-1,2)</lightblue>
<cadetblue>multiple inputs version for updating more points coords at once</cadetblue>
<cadetblue>%pos% can be 'begin' | 'end': new values are added at the begin | end of the polyline</cadetblue>

<lightblue>figures polydelete @1 #2 #4</lightblue>
<cadetblue>if figure 1 is a polyline, nodes 2 and 4 are removed</cadetblue>

<lightblue>figures release</lightblue>
<cadetblue>return the latest release date for this command</cadetblue>

<yellow>------------- NOTES ----------------</yellow>
<turquoise>Note (1)</turquoise>
<cadetblue>list also refers to the visualization priority of figures on the screen</cadetblue>
<turquoise>Note (2)</turquoise>
<cadetblue>figures are recorded by mentioning 'rec' param in circle, line, point, rect declarations</cadetblue>
<turquoise>Note (3)</turquoise>
<cadetblue>Polylines are assumed to be (broken) lines with more than two nodes</cadetblue>