<banana>region management</banana>
<white>Type param /k to return all available keywords</white>
<white>Type param</white> <yellow>/h</yellow> <white>to watch help inside the terminal or</white> <yellow>/h html</yellow> <white>in a separate pop-up</white>

<lightblue>usage</lightblue> <snow>region %plane% %coords% drawcolor:%drawcolor% fillcolor:%fillcolor% linethick:%linethick% roundto:%roundto% %clean% %rec%</snow>

<lightblue>%plane%</lightblue> <snow>zplane | wplane</snow> (mandatory)

<lightblue>%drawcolor%</lightblue> <snow>draw color (border)</snow> (optional)

<lightblue>%fillcolor%</lightblue> <snow>fill color</snow> (optional)

<lightblue>%linethick%</lightblue> <snow>border line thickness</snow> (optional)

<lightblue>%coords%</lightblue> <snow>coordinates syntax</snow> (mandatory)

<lightblue>%roundto%</lightblue> <snow>round output values</snow> (optional)

<lightblue>%rec%</lightblue> (optional)

<yellow>Example for straight syntax coords</yellow>
<lightblue>region zplane 0,2,1,0 drawcolor:yellow fillcolor:cyan opacity:0.2</lightblue>
<cadetblue>paints a bounded portion of the z-plane and defined by input coords (x1,y1,x2,y2)<br>
Border and interior are painted yellow and cyan, respectively.<br>
The interior is painted with opacity set to 0.2
</cadetblue>

<yellow>Example #1 for inequality (simple)</yellow>
<lightblue>region zplane yellow y < 2 rec</lightblue>
<cadetblue>paints yellow the unbounded rect region in the z-plane, given y < 2</cadetblue>
<cadetblue>this region will be recorded in the figures storage space</cadetblue>

<yellow>Example #2 for inequality (composite)</yellow>
<lightblue>region wplane blue x > 2 y < 1 clean</lightblue>
<cadetblue>clean the (default: no input choice) work layer of the wplane and paint blue the unbounded rect region of the w-plane, given x > 2 and y < 1</cadetblue>

<lightblue>usage</lightblue> <snow>rect %lefttop pt% %rightbottom pt% %width% %height% %opacity% %linethick% %borderradius% %plane% %layerrole% %drawcolor% %fillcolor% %rec% $label</snow>

<lightblue>%lefttop pt%</lightblue> <snow>starting corner point - example: (0,0)</snow>
<cadetblue>left up is required for any construction</cadetblue>

<lightblue>%rightbottom pt%</lightblue> <snow>ending corner point - example: (1,2)</snow>
<cadetblue>rightbottom pt is optional for corners construction</cadetblue>

<lightblue>%width height%</lightblue> <snow>rect extents</snow>
<cadetblue>width and height are optional for width/height construction</cadetblue>

<lightblue>%plane%</lightblue> <snow>zplane | wplane | bip</snow>
<cadetblue>where the rect will be drawn</cadetblue>

<lightblue>%layerrole%</lightblue>
<cadetblue>the layer on which the point will be drawn</cadetblue>
<cadetblue>run 'layer list %plane%' to check available 'role' property definitions for the input plane</cadetblue>

<lightblue>%borderradius%</lightblue></snow>
<cadetblue>set it if rect has rounded borders</cadetblue>

<lightblue>%drawcolor% %fillcolor%</lightblue> <snow>red | #FF0000 | rgb(255,0,0)</snow>
<cadetblue>Colors can be input by tags, rgb hex or rgb integer triplets. Type 'noclr' to skip it</cadetblue>

<lightblue>%linethick%</lightblue> <snow>integer value</snow>
<cadetblue>Rectangle border line thickness in pixels. Zero value means no border</cadetblue>

<lightblue>%opacity%</lightblue> <snow>from 0 to 1</snow>
<cadetblue>Set opacity level for current rect. It follows %drawcolor% or %fillcolor%</cadetblue>

<lightblue>%rec%</lightblue></snow>
<cadetblue>If mentioned, record this rect for further display after renderings</cadetblue>

<yellow>point (0,0) drawcolor:orange fillcolor:yellow zplane layer:work</yellow>
<cadetblue>the point will be plot in the 'work' layer belonging to the Z-plane</cadetblue>

<yellow>rect (0,0) (1,2) drawcolor:blue fillcolor:yellow zplane opacity:0.7</yellow>
<cadetblue>(corner points input) plot rect in the Z-plane and paint it yellow with blue border</cadetblue>

<yellow>rect (0,0) 1 4 drawcolor:blue fillcolor:yellow linethick:3 zplane $rect1 rec</yellow>
<cadetblue>(width/height input) plot rect with sides 1 and 4 in the Z-plane, paint it yellow with blue border and set line thickness to 3, then record it with label '$rect1' into the </cadetblue> <snow>preset figures array</snow>

<yellow>rect (0,0) 1 4 drawcolor:blue fillcolor:yellow linethick:3 zplane $rect1 storagein</yellow>
<cadetblue>same as above, but the line is saved into the default storage space</cadetblue>

<yellow>rect (0,0) 1 4 drawcolor:blue fillcolor:yellow linethick:3 zplane $rect1 storagein storagesubset:rects</yellow>
<cadetblue>same as above, but the line is saved into the 'rects' storage space (if existing)</cadetblue>

