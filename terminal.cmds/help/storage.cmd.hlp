<banana>copy input data to a storage space for data sharing</banana>
<white>Type param /k to return all available keywords</white>
<white>Type param</white> <yellow>/h</yellow> <white>to watch help inside the terminal or</white> <yellow>/h html</yellow> <white>in a separate pop-up</white>

<lightblue>usage</lightblue> <snow>slice %action% %datakeywords%</snow>
<lightblue>action</lightblue> <snow>add | copy | create | datatypes | exists | keys | list | purge | remove | reset | restore | size | export</snow>
<lightblue>datakeywords</lightblue> <snow>get the keywords to have available data storages</snow>

<lightblue>storage release</lightblue>
<cadetblue>return the latest release date for this command</cadetblue>

<lightblue>storage datatypes</lightblue>
<cadetblue>return the list of registered data types to be used in</cadetblue> <white>add</white> <cadetblue>action</cadetblue>

<lightblue>storage keys</lightblue>
<cadetblue>return the keys to current storage space subsets</cadetblue>

<lightblue>storage create mytag</lightblue>
<cadetblue>create a new storage space subset and tag it as 'mytag'</cadetblue>
<cadetblue>this tag will be used as reference for further actions</cadetblue>

<lightblue>storage create mytag@l1@l2</lightblue>
<cadetblue>create a new level-2 storage space subset and tag it as 'l2'</cadetblue>
<cadetblue>'l2' is a subkey of 'l1', being a subkey of 'mytag'</cadetblue>
<gray>Users can create a level-n subkey in one instruction</gray>

<lightblue>storage subkeys points</lightblue>
<cadetblue>return keywords to current subsets (level 1) of subset 'points' (level 0)</cadetblue>

<lightblue>storage subkeys points@displacedset</lightblue>
<cadetblue>return keywords to current subsets (level 2) of subset 'points@displacedset' (level 1)</cadetblue>

<lightblue>storage add points point(0,0)</lightblue>
<cadetblue>add a point object, with coordinates (0,0), to the storage subset 'points'</cadetblue>

<lightblue>storage list complex</lightblue>
<cadetblue>return the list of 'complex' storage space subset</cadetblue>

<lightblue>storage list words export</lightblue>
<cadetblue>save the 'words' storage space subset list into a plain text file</cadetblue>

<lightblue>storage reset</lightblue>
<cadetblue>clean all subset spaces</cadetblue>

<lightblue>storage size words</lightblue>
<cadetblue>return size of 'words' storage space subset</cadetblue>

<lightblue>storage purge items</lightblue>
<cadetblue>clean the 'items' storage space subset</cadetblue>

<lightblue>storage purge all</lightblue>
<cadetblue>erase all subsets of storage space</cadetblue>

<lightgray>-------------------------------</lightgray>
<turquoise>Note (1)</turquoise> <white>add</white> <cadetblue>action admits the following data formats</cadetblue>
<turquoise>Note (1.1)</turquoise> <cadetblue>default data formats with float entries</cadetblue>
<turquoise>          </turquoise> <cadetblue>point(x,y)</cadetblue>
<turquoise>          </turquoise> <cadetblue>circle(centerx,centery,radius)</cadetblue>
<turquoise>          </turquoise> <cadetblue>complex(real,imag)</cadetblue>
<turquoise>          </turquoise> <cadetblue>line(fromx,fromy,tox,toy)</cadetblue>
<turquoise>          </turquoise> <cadetblue>rect(x1,y1,x2,y2)</cadetblue>

<turquoise>Note (1.2)</turquoise> <cadetblue>default data formats with integer entries</cadetblue>
<turquoise>          </turquoise> <cadetblue>farey(p,q)</cadetblue>
<turquoise>          </turquoise> <cadetblue>fraction(p,q)</cadetblue>

<turquoise>Note (1.3)</turquoise> <cadetblue>default data formats with text entries</cadetblue>
<turquoise>          </turquoise> <cadetblue>String('abc')</cadetblue>

<turquoise>Note (1.4)</turquoise> <cadetblue>default data formats with complex entries</cadetblue>
<turquoise>          </turquoise> <cadetblue>mobius_map(a,b,c,d)</cadetblue>