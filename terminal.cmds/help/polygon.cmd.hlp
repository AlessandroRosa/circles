<banana>plot a (poly)line</banana>
<white>Type param /k to return all available keywords</white>
<white>Type param</white> <yellow>/h</yellow> <white>to watch help inside the terminal or</white> <yellow>/h html</yellow> <white>in a separate pop-up</white>

<lightblue>usage</lightblue> <snow>line %points coords% %close% %bordercolor% %fillcolor% %bordersize% %opacity% %plane% %layerrole% %rec% $label %properties%</snow>

<lightblue>%points coords%</lightblue> <snow>a sequence of points - example: (0,0) (0.1,0.2) (0.2,0.3)</snow>

<lightblue>%properties%</lightblue> <snow>mark</snow>

<lightblue>%plane%</lightblue> <snow>zplane | wplane | bip</snow>
<cadetblue>where the line will be drawn</cadetblue>

<lightblue>%bordercolor%</lightblue> <snow>red | #FF0000 | rgb(255,0,0)</snow>
<cadetblue>Colors can be input by tags, rgb hex or integer triplets. Type 'noclr' to skip it</cadetblue>

<lightblue>%opacity%</lightblue> <snow>from 0 to 1</snow>
<cadetblue>Set opacity level for current polygon. It follows %bordercolor%</cadetblue>

<lightblue>%rec%</lightblue>
<cadetblue>If mentioned, record this polygon for further display after renderings</cadetblue>

<lightblue>%plane%</lightblue> <snow>zplane | wplane | bip</snow>
<cadetblue>the polygon will belong to this layer</cadetblue>
<cadetblue>plane includes multiple layers</cadetblue>

<lightblue>%layerrole%</lightblue>
<cadetblue>the layer on which the point will be drawn</cadetblue>
<cadetblue>run 'layer list %plane%' to check available 'role' property definitions for the input plane</cadetblue>

<yellow>polygon (0,0) (1,2) (2,-1) bordersize:4 bordercolor:blue zplane layer:freedraw</yellow>
<cadetblue>draw a polygon on the 'freedraw' layer of the Z-plane in blue</cadetblue>

<yellow>polygon (0,0) (1,2) (2,-1) bordercolor:blue zplane rec storagesubset:polygons</yellow>
<cadetblue>same as above, but the polygon is recorded into the 'polygons' storage space (if existing)</cadetblue>

<yellow>polygon (0,0) (1,2) (0.4,-0.4) bordercolor:blue fillcolor:cyan zplane $polygon1 rec</yellow>
<cadetblue>draw a polygon on the Z-plane in blue, close it and paint the interior in cyan, recorded as $polygon1</cadetblue>

<yellow>polygon (0,0) (1,2) (1,-2) bordercolor:blue zplane fillcolor:yellow close rec</yellow>
<cadetblue>one more example, here recorded into the</cadetblue> <snow>preset figures array</snow>

<yellow>polygon (0,0) (1,2) (1,-2) bordercolor:blue zplane bordersize:4 opacity:0.8 rec</yellow>
<cadetblue>another example with opacity (ranging from 0 to 1 )</cadetblue>

<yellow>polygon release</yellow>
<cadetblue>return the latest release date for this command</cadetblue>

<<yellow>------------- NOTES ----------------</yellow>
<turquoise>Note (1)</turquoise>
<cadetblue>%thickness% %opacity% must be input according to the above params sequence</cadetblue>
<turquoise>Note (2)</turquoise> <cadetblue>$labels can be used to refer to figures, as alternative to indexes</cadetblue>
<turquoise>Note (3)</turquoise>
<cadetblue>if you want to update later a line entry, use these parameters</cadetblue>
<cadetblue>in '</cadetblue><white>figures</white><cadetblue>' cmd with '</cadetblue><white>update</white><cadetblue>' action</cadetblue>
<snow>points close draw bordercolor fillcolor opacity thick</snow>